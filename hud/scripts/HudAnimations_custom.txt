// commands:
//	Animate <panel name> <variable> <target value> <interpolator> <start time> <duration>
//		variables:
//			FgColor
//			BgColor
//			Position
//			Size
//			Blur		(hud panels only)
//			TextColor	(hud panels only)
//			Ammo2Color	(hud panels only)
//			Alpha		(hud weapon selection only)
//			SelectionAlpha  (hud weapon selection only)
//			TextScan	(hud weapon selection only)
//
//		interpolator:
//			Linear
//			Accel - starts moving slow, ends fast
//			Deaccel - starts moving fast, ends slow
//			Spline - simple ease in/out curve
//			Pulse - < freq > over the duration, the value is pulsed (cosine) freq times ending at the dest value (assuming freq is integral)
//			Flicker - < randomness factor 0.0 to 1.0 > over duration, each frame if random # is less than factor, use end value, otherwise use prev value
//			Gain - < bias > Lower bias values bias towards 0.5 and higher bias values bias away from it.
//			Bias - < bias > Lower values bias the curve towards 0 and higher values bias it towards 1.
//
//	RunEvent <event name> <start time>
//		starts another even running at the specified time
//
//	StopEvent <event name> <start time>
//		stops another event that is current running at the specified time
//
//	StopAnimation <panel name> <variable> <start time>
//		stops all animations refering to the specified variable in the specified panel
//
//	StopPanelAnimations <panel name> <start time>
//		stops all active animations operating on the specified panel
//
//  SetFont <panel name> <fontparameter> <fontname from scheme> <set time> 
//
//	SetTexture <panel name> <textureidname> <texturefilename> <set time>
//
//  SetString <panel name> <string varname> <stringvalue> <set time>

//===========================================

//Health Bonus Pulse
event HudHealthBonusPulse
{
	Animate	PlayerStatusHealthBonusImage 	Alpha		"255"		Linear 0.0 0.2
	Animate	PlayerStatusHealthBonusImage 	Alpha		"0"		Linear 0.2 0.4

	Animate PlayerStatusHealthvalue         FgColor 	"67 161 246 255"          linear 0.0 0.0
	Animate PlayerStatusHealthValueSpec	FgColor		"67 161 246 255"		Accel 0.0 0.0

	Animate PlayerStatusHealthvalueTargetID FgColor "67 161 246 255" linear 0.0 0.0

      RunEvent HudHealthBonusPulseLoop	0.4
}

// call to loop HudHealthBonusPulse
event HudHealthBonusPulseLoop
{
	RunEvent HudHealthBonusPulse 0.0
}

event HudHealthBonusPulseStop
{
	StopEvent HudHealthBonusPulse 0.0
	StopEvent HudHealthBonusPulseLoop 0.0
	Animate PlayerStatusHealthvalue         fgcolor "HP" accel 0.0 0.0
	Animate PlayerStatusHealthValueSpec		FgColor		"HP"		Accel 0.0 0.0
	Animate PlayerStatusHealthvalueTargetID fgcolor "HP" accel 0.0 0.0
}

//===========================================

//Health Dying Pulse
event HudHealthDyingPulse
{
	Animate	PlayerStatusHealthBonusImage 	Alpha		"255"		Linear 0.0 0.075
	Animate	PlayerStatusHealthBonusImage 	Alpha		"0"		Linear 0.125 0.075

	Animate PlayerStatusHealthvalue         FgColor 	"HP"          linear 0.0 0.0
	Animate PlayerStatusHealthValueSpec	FgColor		"222 24 57 255"	Accel 0.0 0.0


	Animate PlayerStatusHealthvalueTargetID FgColor "HP" linear 0.0 0.0
	
	RunEvent HudHealthDyingPulseLoop	0.25
}

// call to loop HudHealthDyingPulse
event HudHealthDyingPulseLoop
{
	RunEvent HudHealthDyingPulse 0.0
}

event HudHealthDyingPulseStop
{
	StopEvent HudHealthDyingPulse 0.0
	StopEvent HudHealthDyingPulseLoop 0.0
	Animate PlayerStatusHealthvalue         fgcolor "HP" accel 0.0 0.0
	Animate PlayerStatusHealthValueSpec	FgColor		"HP"		Accel 0.0 0.0
      Animate PlayerStatusHealthvalueTargetID fgcolor "HP" accel 0.0 0.0
}

//===========================================
//===========================================

event HudLowAmmoPulse
{
	Animate	AmmoNoClip	FgColor		"255 0 255 255"		Linear 0.0 0.0
	Animate	AmmoInReserve	FgColor		"255 0 255 255"		Linear 0.0 0.0

	RunEvent HudLowAmmoPulseLoop	0.25
}

// call to loop HudLowAmmoPulse
event HudLowAmmoPulseLoop
{
	RunEvent HudLowAmmoPulse 0.0
}

event HudLowAmmoPulseStop
{
	StopEvent HudLowAmmoPulse 0.0
	StopEvent HudLowAmmoPulseLoop 0.0

	Animate	AmmoNoClip	FgColor		"Ammo in Clip"		Linear 0.0 0.0
	Animate	AmmoInReserve	FgColor		"Ammo in Reserve"		Linear 0.0 0.0
}

//===========================================


//===========================================

// Spy Disguise
event HudSpyDisguiseChanged
{
	Animate PlayerStatusSpyOutlineImage		Alpha		"0"			Linear 0.0 0.2
	
	Animate PlayerStatusSpyOutlineImage		Position	"c-200 c-200"	Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage		Size		"400 400"		Linear 0.0 0.2

	RunEvent HudSpyDisguiseHide	0.7
}

event HudSpyDisguiseHide
{
	Animate PlayerStatusSpyOutlineImage		Position	"3 413"			Linear 0.0 0.2
	Animate PlayerStatusSpyOutlineImage		Size		"55 55"			Linear 0.0 0.2
	
	Animate PlayerStatusSpyOutlineImage		Alpha		"0"				Linear 0.2 0.1
}

event HudSpyDisguiseFadeIn
{
	RunEvent HudSpyDisguiseChanged	0
	Animate PlayerStatusClassImage			Alpha		"255"			Linear 0.0 0.0	
}

event HudSpyDisguiseFadeOut
{
	RunEvent HudSpyDisguiseChanged	0
	Animate PlayerStatusClassImage			Alpha		"0"				Linear 0.0 0.0	
}
//====================================

// Flash the medic charge hud when we have full charge

event HudMedicCharged
{
        Animate ChargeMeter      FgColor            "Ubercharge Full 1"              Linear 0.0 0.1
        Animate ChargeMeter      FgColor            "Ubercharge Full 2"              Linear 0.3 0.4

        Animate ChargeLabel      FgColor            "Ubercharge Full 1"              Linear 0.0 0.1
        Animate ChargeLabel      FgColor            "Ubercharge Full 2"              Linear 0.3 0.4
 
        RunEvent HudMedicChargedLoop    0.6
}

// call to loop HudHealthBonusPulse
event HudMedicChargedLoop
{
        RunEvent HudMedicCharged 0.0
}
 
event HudMedicChargedStop
{
        StopEvent HudMedicCharged 0.0
        StopEvent HudMedicChargedLoop 0.0
        
        Animate ChargeMeter      FgColor            "Ubercharge Bar"        Linear 0.0 0.0001

        Animate ChargeLabel      FgColor            "0 255 255 255"        Linear 0.0 0.0001
        
}
//===========================================

event DamagedPlayer
{
	StopEvent HitMarker 0.0
	RunEvent HitMarker 0.01
}
event HitMarker { // Blink Crosshair for 1/10th
	Animate DamageAccountValue         Alpha "255"          linear 0.0  0.0
	Animate DamageAccountValue         Alpha "0"            linear 10.0 0.8
	Animate DamageAccountValueBG       Alpha "255"          linear 0.0  0.0
	Animate DamageAccountValueBG       Alpha "0"            linear 10.0 0.8
}
//--------------------------------------------------------------------------
event WinPanel_CompPos
{
	Animate WinPanel ypos 315 Linear 0 0
}

event WinPanel_NormalPos
{
	Animate WinPanel ypos 315 Linear 0 0
}
//
